<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation=
        "http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd">

<!-- 配置数据源(DB层),使用Apache的DBCP2数据源连接池 -->
<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <!-- 指定连接数据库的驱动 -->
    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
    <!-- 指定连接数据库的URL -->
    <property name="url" value="jdbc:mysql://localhost:3306/labdb?characterEncoding=utf-8"/>
    <!-- 指定连接数据库的用户名 -->
    <property name="username" value="root"/>
    <!-- 指定密码 -->
    <property name="password" value="123456"/>
</bean>

<!-- 配置SessionFactory为LocalSessionFactoryBean -->
<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
    <!-- 注入上面配置的数据源 -->
    <property name="dataSource" ref="dataSource" />
    <!-- 注入Hibernate设置(相当于hibernate.properties文件的功能) -->
    <property name="hibernateProperties">
        <props>
            <!-- Hibernate方言类 -->
            <prop key="hibernate.dialect">
                org.hibernate.dialect.MySQLDialect
            </prop>
            <!-- 是否显示SQL -->
            <prop key="hibernate.show_sql">
                true
            </prop>
        </props>
    </property>
    <!-- 注入Hibernate的ORM映射(DO层)(相当于hibernate.cfg.xml文件的功能)-->
    <property name="mappingResources">
        <list>
            <value>config/administrator.hbm.xml</value>
            <value>config/computer.hbm.xml</value>
            <value>config/lab.hbm.xml</value>
            <value>config/record.hbm.xml</value>
            <value>config/student.hbm.xml</value>
        </list>
    </property>
</bean>

<!-- 配置HibernateDaoSupport子类(DAO层) -->
<bean id="administratordao" class="dao.AdministratorDao">
    <!-- HibernateDaoSupport总是需要注入前面的LocalSessionFactoryBean -->
    <property name="sessionFactory" ref="sessionFactory" />
</bean>
<bean id="computerdao" class="dao.ComputerDao">
    <!-- HibernateDaoSupport总是需要注入前面的LocalSessionFactoryBean -->
    <property name="sessionFactory" ref="sessionFactory" />
</bean>
<bean id="labdao" class="dao.LabDao">
    <!-- HibernateDaoSupport总是需要注入前面的LocalSessionFactoryBean -->
    <property name="sessionFactory" ref="sessionFactory" />
</bean>
<bean id="recorddao" class="dao.RecordDao">
    <!-- HibernateDaoSupport总是需要注入前面的LocalSessionFactoryBean -->
    <property name="sessionFactory" ref="sessionFactory" />
</bean>
<bean id="studentdao" class="dao.StudentDao">
    <!-- HibernateDaoSupport总是需要注入前面的LocalSessionFactoryBean -->
    <property name="sessionFactory" ref="sessionFactory" />
</bean>

<!-- 配置业务逻辑的类(业务逻辑层) -->
<bean id="administratorservice" class="service.AdministratorService">
    <!-- 注入相应的DAO -->
    <property name="administratordao" ref="administratordao"></property>
</bean>
<bean id="computerservice" class="service.ComputerService">
    <!-- 注入相应的DAO -->
    <property name="computerdao" ref="computerdao"></property>
</bean>
<bean id="labservice" class="service.LabService">
    <!-- 注入相应的DAO -->
    <property name="labdao" ref="labdao"></property>
</bean>
<bean id="recordservice" class="service.RecordService">
    <!-- 注入相应的DAO -->
    <property name="recorddao" ref="recorddao"></property>
</bean>
<bean id="studentservice" class="service.StudentService">
    <!-- 注入相应的DAO -->
    <property name="studentdao" ref="studentdao"></property>
</bean>



<!-- 配置声明式事务 -->
<!-- 配置Hibernate事务管理器(HibernateTransactionManager) -->
<bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
    <!-- 注入前面的LocalSessionFactoryBean -->
    <property name="sessionFactory" ref="sessionFactory"/>
</bean>

<!-- 事务增强,引用前面配置的Hibernate事务管理器 -->
<tx:advice id="txAdvice" transaction-manager="txManager">
    <tx:attributes>
        <tx:method name="get*" read-only="false"/><!-- 为了使用add方法把read-only="true"改了 -->
        <tx:method name="*"/>
    </tx:attributes>
</tx:advice>

<!-- 事务切面 -->
  <aop:config>
    <aop:pointcut expression="execution(* lab.service.*.*(..))" id="txMethod" />
    <aop:advisor advice-ref="txAdvice" pointcut-ref="txMethod"/>
</aop:config>
</beans>